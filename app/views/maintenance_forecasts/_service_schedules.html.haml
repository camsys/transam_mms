:ruby
  this_periods_schedules = []
  
  schedules.each do |s|
    if schedule_overdue == true and s[:service_due][:overdue]
      this_periods_schedules << s
    elsif s[:service_due][:units] == 'days'
      if s[:service_due][:due] > start_date and s[:service_due][:due] < end_date
        this_periods_schedules << s
      end
    else
      if s[:asset].reported_mileage + allowable_miles < s[:service_due][:due]
        this_periods_schedules << s  
      end
    end
  end
    
%table.table.table-hover.table-striped
  %thead
    %tr
      %th.left Asset
      %th.right Odometer
      %th.left Activity
      %th.right Last Service
      %th.left Service Provider
      %th.right Due
      %th.center Overdue

  %tbody
    - this_periods_schedules.each do |s|
      %tr
        %td.left= s[:asset].name
        %td.right= format_as_integer(s[:asset].reported_mileage)
        %td.left= s[:activity]
        - if s[:service_due][:last_service]
          %td.right= format_as_date(s[:service_due][:last_service].event_date)        
          %td.left= s[:service_due][:last_service].maintenance_provider
        - else
          %td.right
          %td.left
        - if s[:service_due][:units] == 'days'
          %td.right= "On #{format_as_date(s[:service_due][:due])}"
        - else
          %td.right= "At #{format_as_integer(s[:service_due][:due])} miles"
        %td.center= format_as_boolean(s[:service_due][:overdue])

