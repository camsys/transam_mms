:ruby
  table_dom_id = SecureRandom.hex
- unless @asset
  .col-md-9
    #maintenance_service_orders_table_actions.row
      = form_tag maintenance_service_orders_path, :id => 'filter_form', :method => "get", :class => 'navbar-form navbar-left' do
        #filter-div
          %label Priority
          .form-group
            = select_tag(:priority_type_id, options_for_select(MaintenancePriorityType.active.map{|t| [t.name, t.id]}, :selected => @priority_types), :class => "form-control", :multiple => true, :include_blank => 'Select All')

          %label Status
          .form-group
            = select_tag(:state, options_for_select(MaintenanceServiceOrder.state_names.map{|s| [MaintenanceServiceOrder.human_state_name(s) == MaintenanceServiceOrder.human_state_name(s).downcase ? MaintenanceServiceOrder.human_state_name(s).titleize : MaintenanceServiceOrder.human_state_name(s), s]}, :selected => @states), :class => "form-control", :multiple => true, :include_blank => "Select All")

          %label Date First Recommended
          .form-group
            = date_field_tag(:date_recommended, @date_recommended)

          %label Timeline
          .form-group
            = date_field_tag(:due_month, @due_month)

          .form-group
            = button_tag :class => 'btn btn-default pull-right filter', :type => 'submit' do
              %i.fa.fa-filter

%table.table.table-hover{:id => table_dom_id,
    :data => {:toggle => 'table',
    :url => @asset.present? ? maintenance_service_orders_path(:asset_id => @asset.try(:transam_asset).try(:id) || @asset.id, :format => :json) : maintenance_service_orders_path(:format => :json),
    :card_view => "false",
    :pagination => 'true',
    :sort_order => 'asc',
    :sortable => 'true',
    :side_pagination => 'server',
    :show_pagination_switch => 'true',
    :page_number => '1',
    :page_list => "[5, 10, 20, 50, 100, 200]",
    :page_size => current_user.num_table_rows,
    :search => 'false',
    :show_columns => 'true',
    :show_export => 'true',
    :row_style => 'row_style',
    :click_to_select => 'true',
    :query_params => "query_params",
    :id_field => 'object_key',
    :export_types => "['csv', 'txt', 'excel']",
    :state_save => 'true',
    :state_save_id_table => "work_orders_id",
    :state_save_expire => "1y",
    :single_select => 'true'}}

  %thead
    %tr
      %th.center.nowrap{:data => {:field => "object_key", :align => 'left', :visible => 'false'}} Object Key
      %th.center{:data => {:field => "workorder_number", :align => 'left', :sortable => 'true'}} Number
      %th.center{:data => {:field => "priority_type", :align => 'left', :sortable => 'false'}} Priority
      %th.center{:data => {:field => "order_date", :align => 'right', :formatter => 'date_formatter', :sortable => 'true'}} Date
      %th.center{:data => {:field => "state", :align => 'left', :sortable => 'true'}} Status
      %th.center{:data => {:field => "maintenance_provider", :align => 'left', :sortable => 'true'}} Provider
      %th.center{:data => {:field => "sum_events", :align => 'right', :sortable => 'true'}} Num. Activities
      %th.center{:data => {:field => "date_recommended", :align => 'right', :formatter => 'date_formatter', :sortable => 'true'}} Date First Recommended
      %th.center{:data => {:field => "due_month", :align => 'left', :sortable => 'false'}} Timeline

      - unless @asset
        %th.center{:data => {:field => "asset", :align => 'left', :sortable => 'true'}} Asset

= render 'shared/table_formatters'

:javascript

  var path = '#{maintenance_service_order_path("x")}';

  $(window).resize(function() {
    $("##{table_dom_id}").bootstrapTable('resetView');
  });

  $("##{table_dom_id}").on('click-row.bs.table', function (e, row, $element) {
    var url = path.replace("x", row['object_key']);
    document.location.href = url;
  }).on('sort.bs.table', function(e, name, order) {
    $("##{table_dom_id}").bootstrapTable('selectPage', 1);
  }).on('post-body.bs.table', function() {
    $('.fixed-table-container').css('min-height', '300px');
    $('##{table_dom_id} > tbody > tr').addClass('action-path');
  });

  var priority_types = #{@priority_types || []};
  var states = #{raw @states.blank? ? [] : raw(@states)};
  var date_recommended = '#{@date_recommended}';
  var due_month = '#{@due_month}';

  function query_params(params) {
    if(priority_types.length > 0) {
      params.priority_type_id = priority_types;
    }
    if(states.length > 0) {
      params.state = states;
    }
    if(date_recommended) {
      params.date_recommended = date_recommended;
    }
    if(due_month) {
      params.due_month = due_month;
    }

    return params;
  }